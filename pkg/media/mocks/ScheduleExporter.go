// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	context "context"
	media "nasdaqvfs/pkg/media"

	mock "github.com/stretchr/testify/mock"
)

// ScheduleExporter is an autogenerated mock type for the ScheduleExporter type
type ScheduleExporter struct {
	mock.Mock
}

// ExportImage provides a mock function with given fields: ctx, cfg, template
func (_m *ScheduleExporter) ExportImage(ctx context.Context, cfg media.Config, template media.Template) (string, error) {
	ret := _m.Called(ctx, cfg, template)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, media.Config, media.Template) (string, error)); ok {
		return rf(ctx, cfg, template)
	}
	if rf, ok := ret.Get(0).(func(context.Context, media.Config, media.Template) string); ok {
		r0 = rf(ctx, cfg, template)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, media.Config, media.Template) error); ok {
		r1 = rf(ctx, cfg, template)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewScheduleExporter interface {
	mock.TestingT
	Cleanup(func())
}

// NewScheduleExporter creates a new instance of ScheduleExporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewScheduleExporter(t mockConstructorTestingTNewScheduleExporter) *ScheduleExporter {
	mock := &ScheduleExporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
