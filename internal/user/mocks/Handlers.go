// Code generated by mockery v2.28.1. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// Handlers is an autogenerated mock type for the Handlers type
type Handlers struct {
	mock.Mock
}

// Create provides a mock function with given fields: c
func (_m *Handlers) Create(c *gin.Context) {
	_m.Called(c)
}

// GetUserByID provides a mock function with given fields: c
func (_m *Handlers) GetUserByID(c *gin.Context) {
	_m.Called(c)
}

// GetUsers provides a mock function with given fields: c
func (_m *Handlers) GetUsers(c *gin.Context) {
	_m.Called(c)
}

// Login provides a mock function with given fields: c
func (_m *Handlers) Login(c *gin.Context) {
	_m.Called(c)
}

// UpdateUserByID provides a mock function with given fields: c
func (_m *Handlers) UpdateUserByID(c *gin.Context) {
	_m.Called(c)
}

type mockConstructorTestingTNewHandlers interface {
	mock.TestingT
	Cleanup(func())
}

// NewHandlers creates a new instance of Handlers. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewHandlers(t mockConstructorTestingTNewHandlers) *Handlers {
	mock := &Handlers{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
